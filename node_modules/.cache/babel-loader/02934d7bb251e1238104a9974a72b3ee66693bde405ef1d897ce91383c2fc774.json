{"ast":null,"code":"var _jsxFileName = \"/home/an/testapi/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleSheetApiExample = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Replace 'YOUR_API_KEY' with your actual Google Sheets API key\n    const apiKey = 'AIzaSyDtSrAXkZB-6VuULKc3C3igpnr144Ws3iA';\n    const sheetId = '1htzgArSyLu9kyl6Ed1SB4v_w5jiAn8oof7icfOzc1l8'; // Replace with your Google Sheet ID\n    const sheetName = 'Sheet1'; // Replace with your sheet name\n\n    // Google Sheets API endpoint\n    const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${sheetName}?key=${apiKey}`;\n\n    // Fetch data from the Google Sheets API\n    axios.get(apiUrl).then(response => {\n      // Extract values from the response\n      const values = response.data.values || [];\n\n      // Update the state with the data\n      setData(values);\n    }).catch(error => {\n      console.error('Error fetching data from Google Sheets API:', error);\n    });\n  }, []); // Empty dependency array ensures that this effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data from Google Sheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: row.join(', ')\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSheetApiExample, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = GoogleSheetApiExample;\nexport default GoogleSheetApiExample;\nvar _c;\n$RefreshReg$(_c, \"GoogleSheetApiExample\");","map":{"version":3,"names":["logo","jsxDEV","_jsxDEV","GoogleSheetApiExample","_s","data","setData","useState","useEffect","apiKey","sheetId","sheetName","apiUrl","axios","get","then","response","values","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","index","join","_c","$RefreshReg$"],"sources":["/home/an/testapi/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nconst GoogleSheetApiExample = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Replace 'YOUR_API_KEY' with your actual Google Sheets API key\n    const apiKey = 'AIzaSyDtSrAXkZB-6VuULKc3C3igpnr144Ws3iA';\n    const sheetId = '1htzgArSyLu9kyl6Ed1SB4v_w5jiAn8oof7icfOzc1l8'; // Replace with your Google Sheet ID\n    const sheetName = 'Sheet1'; // Replace with your sheet name\n\n    // Google Sheets API endpoint\n    const apiUrl = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${sheetName}?key=${apiKey}`;\n\n    // Fetch data from the Google Sheets API\n    axios.get(apiUrl)\n      .then(response => {\n        // Extract values from the response\n        const values = response.data.values || [];\n\n        // Update the state with the data\n        setData(values);\n      })\n      .catch(error => {\n        console.error('Error fetching data from Google Sheets API:', error);\n      });\n  }, []); // Empty dependency array ensures that this effect runs only once\n\n  return (\n    <div>\n      <h1>Data from Google Sheet</h1>\n      <ul>\n        {data.map((row, index) => (\n          <li key={index}>{row.join(', ')}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default GoogleSheetApiExample;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,MAAM,GAAG,yCAAyC;IACxD,MAAMC,OAAO,GAAG,8CAA8C,CAAC,CAAC;IAChE,MAAMC,SAAS,GAAG,QAAQ,CAAC,CAAC;;IAE5B;IACA,MAAMC,MAAM,GAAI,iDAAgDF,OAAQ,WAAUC,SAAU,QAAOF,MAAO,EAAC;;IAE3G;IACAI,KAAK,CAACC,GAAG,CAACF,MAAM,CAAC,CACdG,IAAI,CAACC,QAAQ,IAAI;MAChB;MACA,MAAMC,MAAM,GAAGD,QAAQ,CAACX,IAAI,CAACY,MAAM,IAAI,EAAE;;MAEzC;MACAX,OAAO,CAACW,MAAM,CAAC;IACjB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACrE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BvB,OAAA;MAAAmB,QAAA,EACGhB,IAAI,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnB1B,OAAA;QAAAmB,QAAA,EAAiBM,GAAG,CAACE,IAAI,CAAC,IAAI;MAAC,GAAtBD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CApCID,qBAAqB;AAAA2B,EAAA,GAArB3B,qBAAqB;AAsC3B,eAAeA,qBAAqB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}